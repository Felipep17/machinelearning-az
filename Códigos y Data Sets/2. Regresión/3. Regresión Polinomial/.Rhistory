setwd("C:/Users/sebas/OneDrive/Escritorio/Machine Learning/machinelearning-az/Códigos y Data Sets/2. Regresión/3. Regresión Polinomial")
# Importar el dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresión Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
# Visualización del modelo lineal
# install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = "blue") +
ggtitle("Predicción lineal del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = "blue") +
ggtitle("Predicción polinómica del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Predicción de nuevos resultados con Regresión Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Predicción de nuevos resultados con Regresión Polinómica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
dataset$Level2
dataset = dataset[, 2:3]
dataset
# Importar el dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[, 2:3]
dataset
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
# Visualización del modelo lineal
# install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = "blue") +
ggtitle("Predicción lineal del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = "blue") +
ggtitle("Predicción polinómica del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Predicción de nuevos resultados con Regresión Lineal
y_pred = predict(lin_reg, newdata = data.frame(Level = 6.5))
# Predicción de nuevos resultados con Regresión Polinómica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred_poly
X<-dataset
X
Data <- read.csv("C:/Users/sebas/OneDrive/Escritorio/Machine Learning/machinelearning-az/Códigos y Data Sets/1. Preprocesado de Datos/Data.csv")
View(Data)
X<- Data
X
X$Purchased[5]<- NA
X
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,2])
X[,2]<-ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,2])
X[,2]
X[,4]<-ifelse(is.na(X[,4]),
sample(X[,2][-is.na(X[,4])],1),X[,4])
X[,4]
X[,4]<-ifelse(is.na(X[,4]),
sample(X[,4][-is.na(X[,4])],1),X[,4])
X[,4]
X[,4]<-ifelse(is.na(X[,4]),
sample(X[,4][-is.na(X[,4])],1),X[,4])
X[,4]
X<- Data
X$Purchased[5]<- NA
X[,4]<-ifelse(is.na(X[,4]),
sample(X[,4][-is.na(X[,4])],1),X[,4])
X[,4]
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=='character'){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=='numeric'){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
class(X[,i])
paste(tipo)
tipo<- class(X[,1])
paste(tipo)
tipo<- class(X[,1])
paste(tipo)
if(paste(tipo)=='character'){
X[,1]<- ifelse(is.na(X[,1]),
sample(X[,1][-is.na(X[,i])],1),X[,1])
}
X[,1]
tipo<- class(X[,1])
paste(tipo)
if(paste(tipo)=='character'){
X[,1]<- ifelse(is.na(X[,1]),
sample(X[,1][-is.na(X[,i])],1),X[,1])
}
X[,1]
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X
X[,2]
tipo<- class(X[,2])
paste(tipo)
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=='character'){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
X[,2]
if(paste(tipo)=='numeric'){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=='numeric'){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
X[,2]
if(paste(tipo)=='integer'){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=='integer'){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
tipo
tipo<- class(X[,2])
paste(tipo)
X[,2]
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=="character"){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
X[,2]
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X[,2]
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=="integer"){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,1])
}
X[,2]
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X[,2]
tipo<- class(X[,2])
paste(tipo)
if(paste(tipo)=="integer"){
X[,2]<- ifelse(is.na(X[,2]),
sample(X[,2][-is.na(X[,2])],1),X[,2])
}
X[,2]
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X[,2]
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=="character"){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=="integer"){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X[,i]
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X[,2]
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=="character"){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=="integer"){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
X<- Data
X$Purchased[5]<- NA
is.na(X$Purchased)
X[,2]
for(i in 1:ncol(X)){
tipo<- class(X[,i])
if(paste(tipo)=="character"){
X[,i]<- ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
if(paste(tipo)=="integer"){
X[,i]<-ifelse(is.na(X[,i]),
sample(X[,i][-is.na(X[,i])],1),X[,i])
}
}
X
# Importar el dataset
dataset = read.csv('Position_Salaries.csv')
dataset = dataset[, 2:3]
# Ajustar Modelo de Regresión Lineal con el Conjunto de Datos
lin_reg = lm(formula = Salary ~ .,
data = dataset)
# Ajustar Modelo de Regresión Polinómica con el Conjunto de Datos
dataset$Level2 = dataset$Level^2
dataset$Level3 = dataset$Level^3
dataset$Level4 = dataset$Level^4
poly_reg = lm(formula = Salary ~ .,
data = dataset)
summary(poly_reg)
# Visualización del modelo lineal
# install.packages("ggplot2")
library(ggplot2)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = dataset$Level, y = predict(lin_reg, newdata = dataset)),
color = "blue") +
ggtitle("Predicción lineal del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
# Visualización del modelo polinómico
x_grid = seq(min(dataset$Level), max(dataset$Level), 0.1)
ggplot() +
geom_point(aes(x = dataset$Level , y = dataset$Salary),
color = "red") +
geom_line(aes(x = x_grid, y = predict(poly_reg,
newdata = data.frame(Level = x_grid,
Level2 = x_grid^2,
Level3 = x_grid^3,
Level4 = x_grid^4))),
color = "blue") +
ggtitle("Predicción polinómica del suedlo en función del nivel del empleado") +
xlab("Nivel del empleado") +
ylab("Sueldo (en $)")
model<- lm(Salary~Level+I(Level^2)+I(Level^3)+I(Level^4),data=dataset )
summary(poly_reg)
summary(model)
predict(model,newdata=data.frame(Level=6.5))
# Predicción de nuevos resultados con Regresión Polinómica
y_pred_poly = predict(poly_reg, newdata = data.frame(Level = 6.5,
Level2 = 6.5^2,
Level3 = 6.5^3,
Level4 = 6.5^4))
y_pred_poly
